{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Italic;\f2\fnil\fcharset0 Menlo-Regular;
\f3\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red83\green101\blue121;\red255\green255\blue255;\red0\green0\blue0;
\red155\green35\blue147;\red92\green38\blue153;\red28\green0\blue207;\red50\green109\blue116;\red57\green0\blue160;
\red196\green26\blue22;\red36\green82\blue86;}
{\*\expandedcolortbl;;\csgenericrgb\c32401\c39745\c47507;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c0\c0\c0;
\csgenericrgb\c60759\c13753\c57628;\csgenericrgb\c35922\c14825\c60191;\csgenericrgb\c11000\c0\c81000;\csgenericrgb\c19418\c42935\c45455;\csgenericrgb\c22454\c0\c62803;
\csgenericrgb\c77000\c10200\c8600;\csgenericrgb\c13924\c32052\c33684;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs72 \cf0 CODILITY
\fs24 \
\

\fs36 Task 1
\fs24 \
\
\pard\tx494\pardeftab494\pardirnatural\partightenfactor0

\f1\i\fs20 \cf2 \cb3 // you can write to stdout for debugging purposes, e.g.
\f2\i0 \cf4 \

\f1\i \cf2 // print("this is a debug message")
\f2\i0 \cf4 \

\f3\b \cf5 public
\f2\b0 \cf4  
\f3\b \cf5 class
\f2\b0 \cf4  IntList \{\
    
\f3\b \cf5 public
\f2\b0 \cf4  
\f3\b \cf5 var
\f2\b0 \cf4  value : \cf6 Int\cf4  = \cf7 0\cf4 \
    
\f3\b \cf5 public
\f2\b0 \cf4  
\f3\b \cf5 var
\f2\b0 \cf4  next : \cf8 IntList\cf4 ?\
    
\f3\b \cf5 public
\f2\b0 \cf4  
\f3\b \cf5 init
\f2\b0 \cf4 () \{\}\
\}\
\

\f3\b \cf5 public
\f2\b0 \cf4  
\f3\b \cf5 func
\f2\b0 \cf4  solution(
\f3\b \cf5 _
\f2\b0 \cf4  L : \cf8 IntList\cf4 ?) -> \cf6 Int\cf4  \{\
\
    
\f3\b \cf5 if
\f2\b0 \cf4  L == 
\f3\b \cf5 nil
\f2\b0 \cf4  \{\
        
\f3\b \cf5 return
\f2\b0 \cf4  \cf7 0\cf4 ;\
    \}
\f3\b \cf5 else
\f2\b0 \cf4  
\f3\b \cf5 if
\f2\b0 \cf4  L?.\cf8 next\cf4  == 
\f3\b \cf5 nil
\f2\b0 \cf4  \{\
        
\f3\b \cf5 return
\f2\b0 \cf4  \cf7 1\cf4 ;\
    \}
\f3\b \cf5 else
\f2\b0 \cf4  \{\
        \cf9 print\cf4 (\cf10 "in"\cf4 )\
        
\f3\b \cf5 return
\f2\b0 \cf4  (\cf7 1\cf4  + \cf11 solution\cf4 (L?.\cf8 next\cf4 ));\
    \}\
\
\}
\f0\fs24 \cf0 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \

\fs36 Task 2
\fs24 \
\
\pard\tx494\pardeftab494\pardirnatural\partightenfactor0

\f3\b\fs20 \cf5 \cb3 public
\f2\b0 \cf4  
\f3\b \cf5 func
\f2\b0 \cf4  solution(
\f3\b \cf5 _
\f2\b0 \cf4  A : 
\f3\b \cf5 inout
\f2\b0 \cf4  [\cf6 Int\cf4 ]) -> \cf6 Int\cf4  \{\
    
\f1\i \cf2 // write your code in Swift 4.2.1 (Linux)
\f2\i0 \cf4 \
    
\f3\b \cf5 var
\f2\b0 \cf4  arrayOfPits : [\cf6 Int\cf4 ] = []\
    \
    
\f3\b \cf5 for
\f2\b0 \cf4  i 
\f3\b \cf5 in
\f2\b0 \cf4  \cf7 0\cf4 ..<A.\cf6 count\cf4 -\cf7 2\cf4 \{\
        
\f3\b \cf5 var
\f2\b0 \cf4  P = A[i]\
        
\f3\b \cf5 for
\f2\b0 \cf4  j 
\f3\b \cf5 in
\f2\b0 \cf4  i..<A.\cf6 count\cf4 -\cf7 1\cf4 \{\
            
\f3\b \cf5 var
\f2\b0 \cf4  Q = A[j]\
            
\f3\b \cf5 for
\f2\b0 \cf4  k 
\f3\b \cf5 in
\f2\b0 \cf4  j..<A.\cf6 count\cf4 \{\
                
\f3\b \cf5 var
\f2\b0 \cf4  R = A[k]\
                
\f3\b \cf5 if
\f2\b0 \cf4  P < Q && Q < R \{\
                    
\f3\b \cf5 let
\f2\b0 \cf4  val1 = P-Q\
                    
\f3\b \cf5 let
\f2\b0 \cf4  val2 = R-Q\
                    
\f3\b \cf5 if
\f2\b0 \cf4  val1 < val2 \{\
                        arrayOfPits.\cf9 append\cf4 (val1)\
                    \}
\f3\b \cf5 else
\f2\b0 \cf4  \{\
                        arrayOfPits.\cf9 append\cf4 (val2)\
                    \}\
                \}\
            \}\
        \}\
    \}\
    
\f3\b \cf5 return
\f2\b0 \cf4  arrayOfPits.\cf9 max\cf4 ()!\
\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \cb1 \
\
\
\
}